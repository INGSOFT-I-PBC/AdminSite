# Generated by Django 4.1 on 2022-08-31 04:02

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("created_at", models.DateTimeField(auto_created=True, auto_now=True)),
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("deleted_at", models.DateTimeField(default=None, null=True)),
                ("username", models.CharField(max_length=15, unique=True)),
                (
                    "email",
                    models.EmailField(
                        max_length=100, unique=True, verbose_name="email address"
                    ),
                ),
                ("password", models.CharField(max_length=255)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "db_table": "user",
            },
        ),
        migrations.CreateModel(
            name="BranchOffice",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("name", models.CharField(max_length=255)),
                (
                    "latitude",
                    models.DecimalField(decimal_places=6, max_digits=10, null=True),
                ),
                (
                    "longitude",
                    models.DecimalField(decimal_places=6, max_digits=10, null=True),
                ),
            ],
            options={
                "db_table": "branch_offices",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("description", models.CharField(max_length=256)),
                ("name", models.CharField(max_length=60)),
                ("short_name", models.CharField(max_length=15)),
            ],
            options={
                "db_table": "category",
            },
        ),
        migrations.CreateModel(
            name="CategoryParam",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("default_value", models.CharField(max_length=100)),
                ("field", models.CharField(max_length=50)),
                ("field_type", models.CharField(max_length=20)),
                ("required", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "category_params",
            },
        ),
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("short_name", models.CharField(max_length=5)),
            ],
            options={
                "db_table": "cities",
            },
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("deleted_at", models.DateTimeField(default=None, null=True)),
                ("address", models.CharField(max_length=256)),
                ("business_name", models.CharField(max_length=128, null=True)),
                ("email", models.EmailField(max_length=32)),
                ("number_id", models.CharField(max_length=16)),
                ("name", models.CharField(max_length=128)),
                ("phone_number", models.CharField(max_length=16)),
            ],
            options={
                "db_table": "clients",
            },
        ),
        migrations.CreateModel(
            name="CreditNote",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("code", models.CharField(max_length=128)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("iva", models.DecimalField(decimal_places=3, max_digits=6)),
                ("return_deadline", models.DateField(default=None, null=True)),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=3,
                        max_digits=14,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("total", models.DecimalField(decimal_places=3, max_digits=14)),
                ("anulated", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "credit_note",
            },
        ),
        migrations.CreateModel(
            name="Employee",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("deleted_at", models.DateTimeField(default=None, null=True)),
                ("name", models.CharField(max_length=128)),
                ("lastname", models.CharField(max_length=128)),
                ("cid", models.CharField(max_length=11, unique=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "db_table": "employees",
            },
        ),
        migrations.CreateModel(
            name="Gender",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=30)),
                ("short_name", models.CharField(max_length=6, null=True)),
            ],
            options={
                "db_table": "genders",
            },
        ),
        migrations.CreateModel(
            name="Group",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                ("codename", models.CharField(max_length=128)),
            ],
            options={
                "db_table": "group",
            },
        ),
        migrations.CreateModel(
            name="GroupPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "db_table": "group_permission",
            },
        ),
        migrations.CreateModel(
            name="HistorialCaja",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("cantidad_facturas", models.IntegerField()),
                ("fecha_cierre", models.DateTimeField()),
                ("fecha_apertura", models.DateTimeField()),
                ("num_caja", models.IntegerField()),
                (
                    "valor_apertura",
                    models.DecimalField(decimal_places=3, max_digits=10),
                ),
                ("valor_cierre", models.DecimalField(decimal_places=3, max_digits=10)),
                (
                    "1_centavo",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "5_centavo",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "10_centavo",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "25_centavo",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "50_centavo",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "1_dolar_moneda",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "1_dolar_billete",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "5_billete",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "10_billete",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "20_billete",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "50_billete",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "dinero_fisico",
                    models.DecimalField(
                        decimal_places=3,
                        max_digits=13,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "dinero_faltante",
                    models.DecimalField(decimal_places=3, max_digits=13),
                ),
            ],
            options={
                "db_table": "historial_caja",
            },
        ),
        migrations.CreateModel(
            name="InventoryModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("deleted_at", models.DateTimeField(default=None, null=True)),
                (
                    "quantity",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
            ],
            options={
                "db_table": "inventory",
            },
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("code", models.CharField(max_length=128)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("iva", models.DecimalField(decimal_places=3, max_digits=6)),
                ("return_deadline", models.DateField()),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=3,
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("transaction_code", models.CharField(max_length=128, null=True)),
                ("total", models.DecimalField(decimal_places=3, max_digits=15)),
                ("anulated", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "invoice",
            },
        ),
        migrations.CreateModel(
            name="InvoiceDetails",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=3,
                        max_digits=14,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
            ],
            options={
                "db_table": "invoice_details",
            },
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("deleted_at", models.DateTimeField(default=None, null=True)),
                ("brand", models.CharField(max_length=128)),
                ("img", models.CharField(max_length=255)),
                ("iva", models.DecimalField(decimal_places=3, default=0, max_digits=6)),
                ("model", models.CharField(max_length=128)),
                ("name", models.CharField(max_length=60)),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=3,
                        max_digits=14,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
            ],
            options={
                "db_table": "items",
            },
        ),
        migrations.CreateModel(
            name="ItemMetaData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("value", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "item_meta_data",
            },
        ),
        migrations.CreateModel(
            name="OrderRequest",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("requested_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "order_request",
            },
        ),
        migrations.CreateModel(
            name="OrderRequestDetail",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
            ],
            options={
                "db_table": "order_request_details",
            },
        ),
        migrations.CreateModel(
            name="OrderStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "order_status",
            },
        ),
        migrations.CreateModel(
            name="PaymentMethod",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("name", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "payment_method",
            },
        ),
        migrations.CreateModel(
            name="Permission",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("codename", models.CharField(max_length=128)),
            ],
            options={
                "db_table": "permission",
            },
        ),
        migrations.CreateModel(
            name="Provider",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("deleted_at", models.DateTimeField(default=None, null=True)),
                ("name", models.CharField(max_length=128)),
                ("document_path", models.CharField(max_length=128)),
                ("bussiness_name", models.CharField(max_length=128)),
                ("phone_no", models.CharField(max_length=25)),
                ("website", models.URLField(max_length=100, null=True)),
                ("email", models.EmailField(max_length=64)),
                (
                    "latitude",
                    models.DecimalField(decimal_places=6, max_digits=10, null=True),
                ),
                (
                    "longitude",
                    models.DecimalField(decimal_places=6, max_digits=10, null=True),
                ),
            ],
            options={
                "db_table": "provider",
            },
        ),
        migrations.CreateModel(
            name="Province",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "provinces",
            },
        ),
        migrations.CreateModel(
            name="Purchase",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("reference", models.IntegerField()),
                ("img_details", models.CharField(max_length=255, null=True)),
            ],
            options={
                "db_table": "purchase",
            },
        ),
        migrations.CreateModel(
            name="PurchaseDetail",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=3,
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
            ],
            options={
                "db_table": "purchase_details",
            },
        ),
        migrations.CreateModel(
            name="PurchaseStatus",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "purchase_status",
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=64, verbose_name="role name")),
                (
                    "codename",
                    models.CharField(
                        default=None, max_length=50, verbose_name="role identifier"
                    ),
                ),
                (
                    "role_class",
                    models.CharField(
                        db_column="class",
                        default=None,
                        max_length=128,
                        verbose_name="role class",
                    ),
                ),
            ],
            options={
                "db_table": "roles",
            },
        ),
        migrations.CreateModel(
            name="Status",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT, to="api.employee"
                    ),
                ),
            ],
            options={
                "db_table": "status",
            },
        ),
        migrations.CreateModel(
            name="WharehouseModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("deleted_at", models.DateTimeField(default=None, null=True)),
                ("name", models.CharField(max_length=128)),
                (
                    "latitude",
                    models.DecimalField(decimal_places=6, max_digits=10, null=True),
                ),
                (
                    "longitude",
                    models.DecimalField(decimal_places=6, max_digits=10, null=True),
                ),
                (
                    "status",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT, to="api.status"
                    ),
                ),
            ],
            options={
                "db_table": "wharehouse",
            },
        ),
        migrations.CreateModel(
            name="WharehouseTransactionModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("notes", models.CharField(blank=True, max_length=300)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT, to="api.employee"
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT, to="api.status"
                    ),
                ),
                (
                    "wharehouse_destiny",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="destiny",
                        to="api.wharehousemodel",
                    ),
                ),
                (
                    "wharehouse_origin",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="origin",
                        to="api.wharehousemodel",
                    ),
                ),
            ],
            options={
                "db_table": "wharehouse_transaction",
            },
        ),
        migrations.CreateModel(
            name="WhTransactionDetailsModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("quantity", models.IntegerField()),
                (
                    "header",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.wharehousetransactionmodel",
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT, to="api.item"
                    ),
                ),
            ],
            options={
                "db_table": "wh_transaction_details",
            },
        ),
        migrations.CreateModel(
            name="UserPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "permission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.permission"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_permissions",
            },
        ),
        migrations.AddIndex(
            model_name="role",
            index=models.Index(fields=["name"], name="roles_name_a96913_idx"),
        ),
        migrations.AddIndex(
            model_name="role",
            index=models.Index(fields=["role_class"], name="roles_class_795dc8_idx"),
        ),
        migrations.AddField(
            model_name="purchasestatus",
            name="created_by",
            field=models.ForeignKey(
                db_column="created_by",
                on_delete=django.db.models.deletion.RESTRICT,
                to="api.employee",
            ),
        ),
        migrations.AddField(
            model_name="purchasestatus",
            name="purchase",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.purchase"
            ),
        ),
        migrations.AddField(
            model_name="purchasestatus",
            name="status",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.status"
            ),
        ),
        migrations.AddField(
            model_name="purchasedetail",
            name="item",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.item"
            ),
        ),
        migrations.AddField(
            model_name="purchasedetail",
            name="purchase",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.purchase"
            ),
        ),
        migrations.AddField(
            model_name="purchase",
            name="invoice",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.invoicedetails"
            ),
        ),
        migrations.AddField(
            model_name="purchase",
            name="order_origin",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.RESTRICT,
                to="api.orderstatus",
            ),
        ),
        migrations.AddField(
            model_name="purchase",
            name="provider",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.provider"
            ),
        ),
        migrations.AddField(
            model_name="purchase",
            name="wharehouse",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.wharehousemodel"
            ),
        ),
        migrations.AddIndex(
            model_name="province",
            index=models.Index(fields=["name"], name="idx_prov_name_find"),
        ),
        migrations.AddField(
            model_name="provider",
            name="created_by",
            field=models.ForeignKey(
                db_column="created_by",
                null=True,
                on_delete=django.db.models.deletion.RESTRICT,
                related_name="creator",
                to="api.employee",
            ),
        ),
        migrations.AddField(
            model_name="provider",
            name="deleted_by",
            field=models.ForeignKey(
                db_column="deleted_by",
                default=None,
                on_delete=django.db.models.deletion.RESTRICT,
                related_name="remover",
                to="api.employee",
            ),
        ),
        migrations.AddField(
            model_name="provider",
            name="status",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.status"
            ),
        ),
        migrations.AddField(
            model_name="provider",
            name="updated_by",
            field=models.ForeignKey(
                db_column="updated_by",
                default=None,
                null=True,
                on_delete=django.db.models.deletion.RESTRICT,
                related_name="updater",
                to="api.employee",
            ),
        ),
        migrations.AddIndex(
            model_name="permission",
            index=models.Index(fields=["name"], name="permission_name_fa4988_idx"),
        ),
        migrations.AddField(
            model_name="paymentmethod",
            name="status",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.status"
            ),
        ),
        migrations.AddField(
            model_name="orderstatus",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.employee"
            ),
        ),
        migrations.AddField(
            model_name="orderstatus",
            name="order",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.orderrequest"
            ),
        ),
        migrations.AddField(
            model_name="orderstatus",
            name="status",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.status"
            ),
        ),
        migrations.AddField(
            model_name="orderrequestdetail",
            name="item",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.item"
            ),
        ),
        migrations.AddField(
            model_name="orderrequestdetail",
            name="order_request",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.orderrequest"
            ),
        ),
        migrations.AddField(
            model_name="orderrequest",
            name="requested_by",
            field=models.ForeignKey(
                db_column="requested_by",
                on_delete=django.db.models.deletion.RESTRICT,
                to="api.employee",
            ),
        ),
        migrations.AddField(
            model_name="orderrequest",
            name="wharehouse",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.wharehousemodel"
            ),
        ),
        migrations.AddField(
            model_name="itemmetadata",
            name="item",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.item"
            ),
        ),
        migrations.AddField(
            model_name="itemmetadata",
            name="param",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.categoryparam"
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.category"
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="created_by",
            field=models.ForeignKey(
                db_column="created_by",
                on_delete=django.db.models.deletion.RESTRICT,
                to="api.employee",
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="status",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.status"
            ),
        ),
        migrations.AddField(
            model_name="invoicedetails",
            name="invoice",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.invoice"
            ),
        ),
        migrations.AddField(
            model_name="invoicedetails",
            name="item",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.item"
            ),
        ),
        migrations.AddField(
            model_name="invoice",
            name="client",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.client"
            ),
        ),
        migrations.AddField(
            model_name="invoice",
            name="created_by",
            field=models.ForeignKey(
                db_column="created_by",
                on_delete=django.db.models.deletion.RESTRICT,
                to="api.employee",
            ),
        ),
        migrations.AddField(
            model_name="invoice",
            name="credit_note",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.RESTRICT,
                to="api.creditnote",
            ),
        ),
        migrations.AddField(
            model_name="invoice",
            name="payment_method",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.paymentmethod"
            ),
        ),
        migrations.AddField(
            model_name="invoice",
            name="status",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.status"
            ),
        ),
        migrations.AddField(
            model_name="inventorymodel",
            name="item",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.item"
            ),
        ),
        migrations.AddField(
            model_name="inventorymodel",
            name="updated_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.employee"
            ),
        ),
        migrations.AddField(
            model_name="inventorymodel",
            name="wharehouse",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.wharehousemodel"
            ),
        ),
        migrations.AddField(
            model_name="historialcaja",
            name="created_by",
            field=models.ForeignKey(
                db_column="created_by",
                on_delete=django.db.models.deletion.RESTRICT,
                to="api.employee",
            ),
        ),
        migrations.AddField(
            model_name="historialcaja",
            name="status",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.status"
            ),
        ),
        migrations.AddField(
            model_name="grouppermission",
            name="group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.group"
            ),
        ),
        migrations.AddField(
            model_name="grouppermission",
            name="permission",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.permission"
            ),
        ),
        migrations.AddField(
            model_name="employee",
            name="role",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.role"
            ),
        ),
        migrations.AddField(
            model_name="creditnote",
            name="branch_office",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.branchoffice"
            ),
        ),
        migrations.AddField(
            model_name="creditnote",
            name="client",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.client"
            ),
        ),
        migrations.AddField(
            model_name="creditnote",
            name="created_by",
            field=models.ForeignKey(
                db_column="created_by",
                on_delete=django.db.models.deletion.RESTRICT,
                to="api.employee",
            ),
        ),
        migrations.AddField(
            model_name="creditnote",
            name="payment_method",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.paymentmethod"
            ),
        ),
        migrations.AddField(
            model_name="creditnote",
            name="status",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.status"
            ),
        ),
        migrations.AddField(
            model_name="client",
            name="city",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.RESTRICT, to="api.city"
            ),
        ),
        migrations.AddField(
            model_name="client",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.employee"
            ),
        ),
        migrations.AddField(
            model_name="client",
            name="gender",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.RESTRICT, to="api.gender"
            ),
        ),
        migrations.AddField(
            model_name="client",
            name="province",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.RESTRICT,
                to="api.province",
            ),
        ),
        migrations.AddField(
            model_name="client",
            name="status",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.status"
            ),
        ),
        migrations.AddField(
            model_name="city",
            name="province",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.province"
            ),
        ),
        migrations.AddField(
            model_name="categoryparam",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.category"
            ),
        ),
        migrations.AddField(
            model_name="category",
            name="status",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.status"
            ),
        ),
        migrations.AddField(
            model_name="branchoffice",
            name="status",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="api.status"
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="employee",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="employee_info",
                to="api.employee",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT,
                related_name="permission_group",
                to="api.group",
            ),
        ),
        migrations.AddIndex(
            model_name="provider",
            index=models.Index(fields=["name"], name="provider_name_816b21_idx"),
        ),
        migrations.AddIndex(
            model_name="provider",
            index=models.Index(fields=["email"], name="provider_email_a03fb4_idx"),
        ),
        migrations.AddIndex(
            model_name="item",
            index=models.Index(fields=["name"], name="idx_item_name"),
        ),
        migrations.AddIndex(
            model_name="item",
            index=models.Index(fields=["price"], name="idx_item_price"),
        ),
        migrations.AddIndex(
            model_name="item",
            index=models.Index(fields=["category"], name="idx_item_category"),
        ),
        migrations.AddIndex(
            model_name="item",
            index=models.Index(fields=["brand"], name="idx_item_brand"),
        ),
        migrations.AddIndex(
            model_name="invoicedetails",
            index=models.Index(fields=["item"], name="invoice_det_item_id_387c3b_idx"),
        ),
        migrations.AddIndex(
            model_name="invoicedetails",
            index=models.Index(fields=["price"], name="invoice_det_price_96c4b5_idx"),
        ),
        migrations.AddIndex(
            model_name="invoicedetails",
            index=models.Index(
                fields=["quantity"], name="invoice_det_quantit_909abd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="employee",
            index=models.Index(fields=["name"], name="employees_name_dfe7fa_idx"),
        ),
        migrations.AddIndex(
            model_name="employee",
            index=models.Index(fields=["cid"], name="employees_cid_9ce2a8_idx"),
        ),
        migrations.AddIndex(
            model_name="employee",
            index=models.Index(
                fields=["lastname"], name="employees_lastnam_925866_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="client",
            index=models.Index(fields=["email"], name="idx_email"),
        ),
        migrations.AddIndex(
            model_name="client",
            index=models.Index(fields=["name"], name="idx_name"),
        ),
        migrations.AddIndex(
            model_name="client",
            index=models.Index(fields=["address"], name="idx_address"),
        ),
        migrations.AddIndex(
            model_name="city",
            index=models.Index(fields=["name"], name="idx_city_name"),
        ),
        migrations.AddIndex(
            model_name="city",
            index=models.Index(fields=["short_name"], name="idx_short_name"),
        ),
        migrations.AddIndex(
            model_name="categoryparam",
            index=models.Index(fields=["field"], name="category_pa_field_89684b_idx"),
        ),
        migrations.AddIndex(
            model_name="categoryparam",
            index=models.Index(
                fields=["field_type"], name="category_pa_field_t_c2da28_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="categoryparam",
            index=models.Index(
                fields=["required"], name="category_pa_require_9230d0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(fields=["name"], name="category_name_d601b7_idx"),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["description"], name="category_descrip_094435_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(fields=["status"], name="category_status__0c8607_idx"),
        ),
        migrations.AddIndex(
            model_name="branchoffice",
            index=models.Index(fields=["name"], name="branch_offi_name_3c94a8_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["username"], name="idx_username_search"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["email"], name="idx_email_find"),
        ),
    ]
