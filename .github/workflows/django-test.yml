name: Django CI

on:
    push:
        branches: ['main']
    pull_request:
        types: [opened, synchronize, reopened]
        branches: ['main']

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            max-parallel: 4
            matrix:
                db-engine: [mysql]
                db-port: [3306]
                mysql-user: [root]
                mysql-password:
                    [
                        LOCALTESTING3397uFwK6Ux6NR9nazYBiZbB0Lujh8acdkdHAodEAUk9p4c/kFfMKiXFUWNUucJV,
                    ]
                app-db: [production]

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Set up Python
              uses: actions/setup-python@v3
              with:
                  python-version: 3.9

            - name: Create dummy file for Docker Compose
              run: |
                  touch .env
            - name: Run application on Docker Compose
              env:
                  SECRET_KEY: ${{ secrets.CI_DJANGO_SECRET_KEY }}
                  DEBUG: false
                  DB_ENGINE: ${{ matrix.db-engine }}
                  DB_NAME: ${{ matrix.app-db }}
                  DB_USER: ${{ matrix.mysql-user }}
                  MYSQL_ROOT_PASSWORD: ${{ matrix.mysql-password }}
                  DB_PASSWORD: ${{ matrix.mysql-password }}
                  JWT_PUBLIC_KEY: ${{ secrets.PUBLIC_KEY }}
                  JWT_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
              run: |
                  docker-compose up -d

            # - name: Run Tests
            #   env:
            #       SECRET_KEY: ${{ secrets.CI_DJANGO_SECRET_KEY }}
            #       DEBUG: false
            #       DB_ENGINE: ${{ matrix.db-engine }}
            #       DB_NAME: ${{ matrix.app-db }}
            #       DB_USER: ${{ matrix.mysql-user }}
            #       DB_PASSWORD: ${{ matrix.mysql-password }}
            #       JWT_PUBLIC_KEY: ${{ secrets.PUBLIC_KEY }}
            #       JWT_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}

            #   run: |
            #       python -m pip install -r requirements
            #       python manage.py test
